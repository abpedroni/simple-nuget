name: PR title Semantic 

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - ready_for_review
      - review_requested

permissions:
  pull-requests: write

jobs:
  semantics:
    if: github.event.action != 'closed'
    name: Semantics analysis
    runs-on: ubuntu-latest
    steps:
    # - name: Print variables
    #   run: |
    #     echo "github.event.action >> ${{ github.event.action}}"
    #     echo "github.actor >> ${{ github.actor}}"
    #     echo "github.event_name >> ${{ github.event_name}}"
    #     echo "github.ref >> ${{ github.ref}}"

    - uses: amannn/action-semantic-pull-request@v3.4.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # Configure which types are allowed.
        # Default: https://github.com/commitizen/conventional-commit-types
        types: |
          feat
          fix
        # Configure which scopes are allowed.
        # scopes: |
        #   core
        #   ui
        # Configure that a scope must always be provided.
        requireScope: false
        # Configure additional validation for the subject based on a regex.
        # This example ensures the subject doesn't start with an uppercase character.
        subjectPattern: ^(?![A-Z]).+$
        # If `subjectPattern` is configured, you can use this property to override
        # the default error message that is shown when the pattern doesn't match.
        # The variables `subject` and `title` can be used within the message.
        subjectPatternError: |
          The subject "{subject}" found in the pull request title "{title}"
          didn't match the configured pattern. Please ensure that the subject
          doesn't start with an uppercase character.
        # For work-in-progress PRs you can typically use draft pull requests 
        # from GitHub. However, private repositories on the free plan don't have 
        # this option and therefore this action allows you to opt-in to using the 
        # special "[WIP]" prefix to indicate this state. This will avoid the 
        # validation of the PR title and the pull request checks remain pending.
        # Note that a second check will be reported if this is enabled.
        wip: true
        # When using "Squash and merge" on a PR with only one commit, GitHub
        # will suggest using that commit message instead of the PR title for the
        # merge commit, and it's easy to commit this by mistake. Enable this option
        # to also validate the commit message for one commit PRs.
        validateSingleCommit: true
        # Related to `validateSingleCommit` you can opt-in to validate that the PR
        # title matches a single commit to avoid confusion.
        #validateSingleCommitMatchesPrTitle: false
        # If you use GitHub Enterprise, you can set this to the URL of your server
        #githubBaseUrl: https://github.myorg.com/api/v3
  # create-release:
  #   name: Create release
  #   runs-on: ubuntu-latest
  #   if: github.event.pull_request.merged == true
  #   steps:

  #     - name: Bump version and push tag
  #       id: tag_version
  #       uses: mathieudutour/github-tag-action@v6.0
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Create Release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.github_token }}
  #       with:
  #         tag_name: "${{ steps.tag_version.outputs.new_tag }}"
  #         release_name: "${{ steps.tag_version.outputs.new_tag }}"
  #         draft: true
  #         prerelease: true

  # release:
  #   runs-on: ubuntu-latest
  #   if: ${{ github.event.pull_request.merged == true }}
  #   steps:
  #     - uses: actions/checkout@v2

  #     # - uses: actions-ecosystem/action-release-label@v1
  #     #   id: release-label
  #     #   if: ${{ github.event.pull_request.merged == true }}

  #     # - uses: actions-ecosystem/action-get-latest-tag@v1
  #     #   id: get-latest-tag
  #     #   if: ${{ steps.release-label.outputs.level != null }}

  #     # - uses: actions-ecosystem/action-bump-semver@v1
  #     #   id: bump-semver
  #     #   if: ${{ steps.release-label.outputs.level != null }}
  #     #   with:
  #     #     current_version: ${{ steps.get-latest-tag.outputs.tag }}
  #     #     level: ${{ steps.release-label.outputs.level }}

  #     - name: Bump version and push tag
  #       id: bump-semver
  #       #if: ${{ steps.release-label.outputs.level != null }}
  #       uses: mathieudutour/github-tag-action@v6.0
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  #     - uses: actions-ecosystem/action-push-tag@v1
  #       #if: ${{ steps.release-label.outputs.level != null }}
  #       with:
  #         tag: ${{ steps.bump-semver.outputs.new_tag }}
  #         message: '${{ steps.bump-semver.outputs.new_tag }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

  #     - name: Create Release
  #       #if: ${{ steps.release-label.outputs.level != null }}
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.github_token }}
  #       with:
  #         tag_name: "${{ steps.bump-semver.outputs.new_tag }}"
  #         release_name: "${{ steps.bump-semver.outputs.new_tag }}"
  #         draft: true
  #         prerelease: true